@page "/members"
@attribute [Authorize]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject IHttpClientFactory HttpClientFactory
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization

<h3>Miembros del Gimnasio</h3>

<AuthorizeView>
    <Authorized>
        @if (isLoading)
        {
            <p><em>Cargando miembros...</em></p>
        }
        else if (members != null && members.Any())
        {
            <table class="table table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th>ID</th>
                        <th>Nombre Completo</th>
                        <th>Email</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var member in members)
                    {
                        <tr>
                            <td>@member.Id</td>
                            <td>@member.FullName</td>
                            <td>@member.Email</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No se encontraron miembros o hubo un error al cargar los datos.</p>
        }
    </Authorized>
    <NotAuthorized>
        <p class="alert alert-warning">Debes iniciar sesión para ver esta página.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private MemberResponse[]? members;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        // Este código solo se ejecutará si el usuario está autorizado,
        // gracias al atributo [Authorize] en la parte superior.
        var httpClient = HttpClientFactory.CreateClient("Api");
        try
        {
            members = await httpClient.GetFromJsonAsync<MemberResponse[]>("api/members");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener los miembros: {ex.Message}");
            // El array 'members' permanecerá nulo, y se mostrará el mensaje de error en la UI.
        }
        finally
        {
            isLoading = false;
        }
    }

    public record MemberResponse(int Id, string FullName, string Email);
}