@page "/membershiptypes"
@attribute [Authorize]
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject IHttpClientFactory HttpClientFactory
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Authorization

<h3>Tipos de Membresía</h3>

<a href="/membershiptypes/create" class="btn btn-primary mb-3">Crear Nuevo Tipo</a>

<AuthorizeView>
    <Authorized>
        @if (isLoading)
        {
            <p><em>Cargando...</em></p>
        }
        else if (membershipTypes != null && membershipTypes.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Nombre</th>
                        <th>Precio</th>
                        <th>Duración (Días)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var type in membershipTypes)
                    {
                        <tr>
                            <td>@type.Name</td>
                            <td>@type.Price.ToString("C")</td>
                            <td>@type.DurationInDays</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No se encontraron tipos de membresía.</p>
        }
    </Authorized>
    <NotAuthorized>
        <p>Debes iniciar sesión para ver esta página.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private MembershipTypeResponse[]? membershipTypes;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = HttpClientFactory.CreateClient("Api");
        try
        {
            membershipTypes = await httpClient.GetFromJsonAsync<MembershipTypeResponse[]>("api/membershiptypes");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al obtener los tipos de membresía: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    public record MembershipTypeResponse(int Id, string Name, string? Description, decimal Price, int DurationInDays);
}